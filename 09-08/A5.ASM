TITLE A5:ASSIGNMENT_5
.MODEL SMALL

SAVE_REGS MACRO REGS
	IRP D,<REGS>
		PUSH D
	ENDM
ENDM

;POPING REGISTERS
RESTORE_REGS MACRO REGS
	IRP D,<REGS>
		POP D
	ENDM
ENDM

;END OF THE PROGRAM
DOS_RTN MACRO
	MOV AH,4CH
	INT 21H
ENDM

NEW_LINE MACRO
	SAVE_REGS <AX,DX>
	MOV AH,2
	MOV DL,0DH
	INT 21H
	MOV DL,0AH
	INT 21H
	RESTORE_REGS <DX,AX>
ENDM

DISP_STR MACRO STR
	LOCAL S1
	SAVE_REGS <AX,DX,DS>
	JMP S1
	MSG DB STR,'$'
	S1:
		MOV AX,CS
		MOV DS,AX
		MOV DX,MSG
		MOV AH,9
		INT 21H
	RESTORE_REGS <DS,DX,AX>
ENDM

INPUT MACRO
	PUSH AX
	MOV AH,2
	MOV DL,'?'
	INT 21H
	MOV AH,1
	XOR DH,DH
	INT 21H
	MOV DL,AL
	SUB DL,48
	NEW_LINE
	POP AX
ENDM

SPACE MACRO
	PUSH AX
	PUSH DX
	MOV AH,2
	MOV DL,' '
	INT 21H
	INT 21H
	INT 21H
	INT 21H
	POP DX
	POP AX
ENDM

.STACK 100H
.DATA
	MARKS DW 10 DUP(?)
		  DW 10 DUP(?)
		  DW 10 DUP(?)
		  DW 10 DUP(?)
		  DW 10 DUP(?)
	SUBJ DW ?
	ROLL DW 5 DUP(?)
	TOTAL DW 5 DUP(0)
	AVG DW 10 DUP(0)
	Q DB 'NO. OF QUES$'
	D DB 'DETAILS$'
	R DB 'ROLL$'
	M DB 'MARKS$'
	RE DB 'READ$'
.CODE

;MAIN PROCEDURE
MAIN PROC
	MOV AX,@DATA
	MOV DS,AX
			MOV AH,9
			LEA DX,Q
			INT 21H
			NEW_LINE
	INPUT
	MOV SUBJ,DX
	MOV CX,5
	XOR BX,BX
	XOR SI,SI
	L1:
		NEW_LINE
				MOV AH,9
				LEA DX,D
				INT 21H
				NEW_LINE
		CALL READ
		
		CALL GET_TOTAL
		MOV TOTAL[SI],AX
		ADD BX,20
		ADD SI,2
	LOOP L1
	NEW_LINE
	CALL TABLE1
	NEW_LINE
	CALL AVERAGE
	CALL TABLE2
	DOS_RTN
MAIN ENDP

;READING THE MARKS
READ PROC
	SAVE_REGS <CX,AX,DX,SI,BX>
	CALL INDEC
	MOV BX,10
	SUB BX,CX
	SUB BX,CX
	MOV ROLL[BX],AX
	MOV CX,SUBJ
	POP BX
	XOR SI,SI
	
	P1:
		INPUT
		MOV MARKS[BX][SI],DX
		ADD SI,2
	LOOP P1
	
	RESTORE_REGS <SI,DX,AX,CX>
	RET
READ ENDP

;FINDING THE TOTAL
GET_TOTAL PROC
	SAVE_REGS <CX,BX,SI>
	MOV CX,SUBJ
	XOR AX,AX
	XOR SI,SI
	
	L2:
		ADD AX,MARKS[BX][SI]
		ADD SI,2
	LOOP L2
	
	RESTORE_REGS <SI,BX,CX>
	RET
GET_TOTAL ENDP

;PRINTING TABLE1
TABLE1 PROC
	SAVE_REGS <CX,BX,SI,AX>
	MOV CX,5
	XOR BX,BX
	XOR SI,SI
	L3:
		MOV AX,ROLL[BX]
		CALL OUTDEC
		SPACE
			SAVE_REGS <AX,BX,CX,SI>
			MOV AL,20
			MOV BX,5
			SUB BX,CX
			MUL BL
			MOV BX,AX
			MOV CX,SUBJ
			XOR SI,SI
			L4:
				MOV AX,MARKS[BX][SI]
				CALL OUTDEC
				ADD SI,2
				SPACE
			LOOP L4
			RESTORE_REGS <SI,CX,BX,AX>
		MOV AX,TOTAL[BX]
		CALL OUTDEC
		CALL GRADE
		SPACE
		NEW_LINE
		ADD BX,2
	LOOP L3
	RESTORE_REGS<AX,SI,BX,CX>
	RET
TABLE1 ENDP

;GRADE
GRADE PROC
	PUSH BX
	PUSH DX
	MOV DX,0
	PUSH AX
	CWD
	MOV BX, SUBJ
	DIV BX
		SPACE
		CMP AX,9
		JGE GRADE_A
		CMP AX,8
		JE GRADE_B
		CMP AX,7
		JE GRADE_C
		CMP AX,6
		JE GRADE_D
		CMP AX,4
		JGE GRADE_P
		MOV DL,'F'
		JMP PR
		GRADE_A:
			MOV DL,'A'
			JMP PR
		GRADE_B:
			MOV DL,'B'
			JMP PR
		GRADE_C:
			MOV DL,'C'
			JMP PR
		GRADE_D:
			MOV DL,'D'
			JMP PR
		GRADE_P:
			MOV DL,'E'
			JMP PR
		PR:
			MOV AH,2
			INT 21H
			POP AX
			POP DX
		POP BX
		RET
GRADE ENDP

;FINDING AVERAGE MARKS
AVERAGE PROC
	SAVE_REGS <AX,BX,CX,SI>
	MOV BX,SUBJ
	MOV AL,2
	MUL BL
	MOV SI,AX
	SUB SI,2
	P21:
		XOR BX,BX
		MOV CX,5
		XOR AX,AX
		P2:
			ADD AX,MARKS[BX][SI]
			ADD BX,20
		LOOP P2
		MOV BL,5
		DIV BL
		MOV AH,0
		MOV AVG[SI],AX
		SUB SI,2
		JNL P21
	RESTORE_REGS <SI,CX,BX,AX>
	
	RET
AVERAGE ENDP

;PRINTING TABLE2
TABLE2 PROC
	SAVE_REGS <AX,BX,CX,DX>
	XOR BX,BX
	MOV CX,SUBJ
	L5:
		MOV AX,SUBJ
		SUB AX,CX
		INC AX
		CALL OUTDEC
		SPACE
		MOV AX,AVG[BX]
		CALL OUTDEC
		ADD BX,2
		NEW_LINE
	LOOP L5
	
	RESTORE_REGS <DX,CX,BX,AX>
	RET
TABLE2 ENDP

INCLUDE d:\INDEC.ASM
INCLUDE d:\OUTDEC.ASM
END MAIN